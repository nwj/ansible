---
- name: Create the orbital group
  group:
    name: "{{ orbital_group }}"
    state: present

- name: Create the orbital user
  user:
    name: "{{ orbital_username }}"
    group: "{{ orbital_group }}"
    system: yes
    createhome: yes
    shell: /usr/sbin/nologin
    state: present

- name: Create the working directory
  file:
    path: "{{ orbital_path }}"
    owner: "{{ orbital_username }}"
    group: "{{ orbital_group }}"
    mode: 0755
    state: directory

- name: Clone the orbital git repo into the working directory
  git:
    repo: "https://github.com/nwj/orbital"
    dest: "{{ orbital_path }}"
    version: master
    force: no
  become: yes
  become_user: "{{ orbital_username }}"

- name: Install nodejs and npm
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nodejs
    - npm

- name: Install npm dependencies
  npm:
    path: "{{ orbital_path }}/"

- name: Build the app
  shell: "npm run build"
  args:
    chdir: "{{ orbital_path }}"

- name: Add the certbot repo
  apt_repository:
    repo: "ppa:certbot/certbot"
    state: present

- name: Install nginx, certbot, and the nginx plugin
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - nginx
    - certbot
    - python-certbot-nginx

- name: Open port 80
  ufw:
    rule: allow
    port: 80
    proto: tcp

- name: Open port 443
  ufw:
    rule: allow
    port: 443
    proto: tcp

- name: Check if a letsencrypt certificate already exists.
  stat:
    path: /etc/letsencrypt/live/{{ orbital_domain }}/cert.pem
  register: orbital_cert

- name: Get a default nginx config in place for letsencrypt
  template:
    src: nginx_default.jinja2
    dest: "/etc/nginx/sites-enabled/default"
  when: not orbital_cert.stat.exists

- name: Restart nginx
  service:
    name: nginx
    state: restarted
  when: not orbital_cert.stat.exists

- name: Generate a new certificate through letsencrypt
  command: "certbot certonly --nginx --noninteractive --agree-tos --email {{ orbital_cert_email }} -d {{ orbital_domain }}"
  when: not orbital_cert.stat.exists

- name: Schedule certificate auto-renewal
  cron:
    name: orbital certificate auto-renewal.
    job: "certbot renew --quiet --no-self-upgrade"
    special_time: daily
    state: present

- name: Remove the default nginx config
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  notify: restart nginx

- name: Create the nginx config
  template: 
    src: nginx.jinja2
    dest: "/etc/nginx/sites-available/orbital"
  notify: restart nginx

- name: Link the nginx config into sites-enabled
  file:
    src: "/etc/nginx/sites-available/orbital"
    dest: "/etc/nginx/sites-enabled/orbital"
    state: link
  notify: restart nginx
